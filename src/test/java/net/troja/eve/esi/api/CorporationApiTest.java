/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.troja.eve.esi.api;

import java.util.ArrayList;
import java.util.List;

import org.junit.Ignore;
import org.junit.Test;

import static org.hamcrest.CoreMatchers.notNullValue;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.greaterThan;

import static org.junit.Assert.assertThat;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.CorporationAlliancesHistoryResponse;
import net.troja.eve.esi.model.CorporationIconsResponse;
import net.troja.eve.esi.model.CorporationNamesResponse;
import net.troja.eve.esi.model.CorporationResponse;

/**
 * API tests for CorporationApi
 */
public class CorporationApiTest extends GeneralApiTest {

    private final CorporationApi api = new CorporationApi();

    /**
     * Get corporation information
     *
     * Public information about a corporation --- Alternate route:
     * &#x60;/v2/corporations/{corporation_id}/&#x60; --- This route is cached
     * for up to 3600 seconds
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdTest() throws ApiException {
        final CorporationResponse response = api.getCorporationsCorporationId(CORPORATION_ID_AAC, DATASOURCE, null, null);

        assertThat(response.getTicker(), equalTo(".AAC."));
        assertThat(response.getAllianceId(), equalTo(ALLIANCE_ID_TRI));
    }

    /**
     * Get alliance history
     *
     * Get a list of all the alliances a corporation has been a member of ---
     * Alternate route:
     * &#x60;/v1/corporations/{corporation_id}/alliancehistory/&#x60; Alternate
     * route: &#x60;/legacy/corporations/{corporation_id}/alliancehistory/&#x60;
     * Alternate route:
     * &#x60;/dev/corporations/{corporation_id}/alliancehistory/&#x60; --- This
     * route is cached for up to 3600 seconds
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdAlliancehistoryTest() throws ApiException {
        final List<CorporationAlliancesHistoryResponse> response = api.getCorporationsCorporationIdAlliancehistory(CORPORATION_ID_AAC, DATASOURCE,
                null, null);

        assertThat(response.size(), greaterThan(0));
        // The last entry is without alliance!
        final CorporationAlliancesHistoryResponse alliance = response.get(response.size() - 2);
        assertThat(alliance.getAllianceId(), equalTo(1804089170));
    }

    /**
     * Get corporation icon
     *
     * Get the icon urls for a corporation --- Alternate route:
     * &#x60;/v1/corporations/{corporation_id}/icons/&#x60; Alternate route:
     * &#x60;/legacy/corporations/{corporation_id}/icons/&#x60; Alternate route:
     * &#x60;/dev/corporations/{corporation_id}/icons/&#x60; --- This route is
     * cached for up to 3600 seconds
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void getCorporationsCorporationIdIconsTest() throws ApiException {
        final CorporationIconsResponse response = api.getCorporationsCorporationIdIcons(CORPORATION_ID_AAC, DATASOURCE, null, null);

        assertThat(response.getPx64x64(), notNullValue());
    }

    /**
     * Get corporation members
     *
     * Read the current list of members if the calling character is a member.
     * --- Alternate route:
     * &#x60;/v2/corporations/{corporation_id}/members/&#x60; Alternate route:
     * &#x60;/legacy/corporations/{corporation_id}/members/&#x60; Alternate
     * route: &#x60;/dev/corporations/{corporation_id}/members/&#x60; --- This
     * route is cached for up to 3600 seconds SSO Scope:
     * esi-corporations.read_corporation_membership.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("One can only get the members of the own corp")
    public void getCorporationsCorporationIdMembersTest() throws ApiException {
        // final List<CorporationMembersResponse> response =
        // api.getCorporationsCorporationIdMembers(CORPORATION_ID_AAC,
        // DATASOURCE);
    }

    /**
     * Get corporation members
     *
     * Read the current list of members if the calling character is a member.
     * --- This route is cached for up to 3600 seconds SSO Scope:
     * esi-corporations.read_corporation_membership.v1 SSO Scope:
     * esi-corporations.track_members.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("One can only get the members of the own corp")
    public void getCorporationsCorporationIdMembertrackingTest() throws ApiException {
        // List<CorporationMemberTrackingResponse> response =
        // api.getCorporationsCorporationIdMembertracking(corporationId,
        // datasource, token, userAgent, xUserAgent);
    }

    /**
     * Get corporation member roles
     *
     * Return the roles of all members if the character has the personnel
     * manager role or any grantable role. --- Alternate route:
     * &#x60;/v1/corporations/{corporation_id}/roles/&#x60; Alternate route:
     * &#x60;/legacy/corporations/{corporation_id}/roles/&#x60; Alternate route:
     * &#x60;/dev/corporations/{corporation_id}/roles/&#x60; --- This route is
     * cached for up to 3600 seconds SSO Scope:
     * esi-corporations.read_corporation_membership.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Testing these would need special rights in the corp")
    public void getCorporationsCorporationIdRolesTest() throws ApiException {
        // List<CorporationRolesResponse> response =
        // api.getCorporationsCorporationIdRoles(corporationId, datasource);
    }

    /**
     * Get corporation structures
     *
     * Get a list of corporation structures --- Alternate route:
     * &#x60;/v1/corporations/{corporation_id}/structures/&#x60; Alternate
     * route: &#x60;/legacy/corporations/{corporation_id}/structures/&#x60;
     * Alternate route:
     * &#x60;/dev/corporations/{corporation_id}/structures/&#x60; --- This route
     * is cached for up to 3600 seconds SSO Scope:
     * esi-corporations.read_structures.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Can't test that")
    public void getCorporationsCorporationIdStructuresTest() throws ApiException {
        // final Integer corporationId = null;
        // final Integer page = null;
        // final String token = null;
        // final String userAgent = null;
        // final String xUserAgent = null;
        // final List<CorporationStructuresResponse> response =
        // api.getCorporationsCorporationIdStructures(corporationId,
        // DATASOURCE, LANGUAGE, page, token, userAgent, xUserAgent);
    }

    /**
     * Get corporation names
     *
     * Resolve a set of corporation IDs to corporation names --- Alternate
     * route: &#x60;/v1/corporations/names/&#x60; Alternate route:
     * &#x60;/legacy/corporations/names/&#x60; Alternate route:
     * &#x60;/dev/corporations/names/&#x60; --- This route is cached for up to
     * 3600 seconds
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void getCorporationsNamesTest() throws ApiException {
        final List<Long> corporationIds = new ArrayList<>();
        corporationIds.add((long) CORPORATION_ID_AAC);

        final List<CorporationNamesResponse> response = api.getCorporationsNames(corporationIds, DATASOURCE, null, null);

        assertThat(response.size(), equalTo(1));
        assertThat(response.get(0).getCorporationId(), equalTo(CORPORATION_ID_AAC));
    }

    /**
     * Get npc corporations
     *
     * Get a list of npc corporations --- Alternate route:
     * &#x60;/v1/corporations/npccorps/&#x60; Alternate route:
     * &#x60;/legacy/corporations/npccorps/&#x60; Alternate route:
     * &#x60;/dev/corporations/npccorps/&#x60; --- This route is cached for up
     * to 3600 seconds
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Doesn't work?!?!")
    public void getCorporationsNpccorpsTest() throws ApiException {
        final String userAgent = null;
        final String xUserAgent = null;
        final List<Integer> response = api.getCorporationsNpccorps(DATASOURCE, userAgent, xUserAgent);

        assertThat(response.size(), equalTo(50));
    }

    /**
     * Update structure vulnerability schedule
     *
     * Update the vulnerability window schedule of a corporation structure ---
     * Alternate route:
     * &#x60;/v1/corporations/{corporation_id}/structures/{structure_id}/&#x60;
     * Alternate route:
     * &#x60;/legacy/corporations/{corporation_id}/structures/{structure_id}/&#x60;
     * Alternate route:
     * &#x60;/dev/corporations/{corporation_id}/structures/{structure_id}/&#x60;
     * SSO Scope: esi-corporations.write_structures.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Update can't be tested")
    public void putCorporationsCorporationIdStructuresStructureIdTest() throws ApiException {
    }
}
