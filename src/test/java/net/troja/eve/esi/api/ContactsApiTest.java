/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.troja.eve.esi.api;

import static org.hamcrest.Matchers.greaterThan;
import static org.junit.Assert.assertThat;

import java.util.List;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.ContactLabelsResponse;
import net.troja.eve.esi.model.ContactsResponse;

/**
 * API tests for ContactsApi
 */
public class ContactsApiTest extends GeneralApiTest {

    private final ContactsApi api = new ContactsApi();

    @Before
    public void setUp() {
        api.setApiClient(apiClient);
    }

    /**
     * Delete contacts
     *
     * Bulk delete contacts --- Alternate route:
     * &#x60;/v1/characters/{character_id}/contacts/&#x60; Alternate route:
     * &#x60;/legacy/characters/{character_id}/contacts/&#x60; Alternate route:
     * &#x60;/dev/characters/{character_id}/contacts/&#x60; SSO Scope:
     * esi-characters.write_contacts.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Delete operations can't be tested")
    public void deleteCharactersCharacterIdContactsTest() throws ApiException {
    }

    /**
     * Get contacts
     *
     * Return contacts of a character --- Alternate route:
     * &#x60;/v1/characters/{character_id}/contacts/&#x60; Alternate route:
     * &#x60;/legacy/characters/{character_id}/contacts/&#x60; Alternate route:
     * &#x60;/dev/characters/{character_id}/contacts/&#x60; --- This route is
     * cached for up to 300 seconds SSO Scope: esi-characters.read_contacts.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdContactsTest() throws ApiException {
        final Integer page = null;
        final List<ContactsResponse> response = api.getCharactersCharacterIdContacts(characterId, page, DATASOURCE);

        assertThat(response.size(), greaterThan(0));
    }

    /**
     * Get contact labels
     *
     * Return custom labels for contacts the character defined --- Alternate
     * route: &#x60;/v1/characters/{character_id}/contacts/labels/&#x60;
     * Alternate route:
     * &#x60;/legacy/characters/{character_id}/contacts/labels/&#x60; Alternate
     * route: &#x60;/dev/characters/{character_id}/contacts/labels/&#x60; ---
     * This route is cached for up to 300 seconds SSO Scope:
     * esi-characters.read_contacts.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void getCharactersCharacterIdContactsLabelsTest() throws ApiException {
        final List<ContactLabelsResponse> response = api.getCharactersCharacterIdContactsLabels(characterId,
                DATASOURCE);

        assertThat(response.size(), greaterThan(0));
    }

    /**
     * Add contacts
     *
     * Bulk add contacts with same settings --- Alternate route:
     * &#x60;/v1/characters/{character_id}/contacts/&#x60; Alternate route:
     * &#x60;/legacy/characters/{character_id}/contacts/&#x60; Alternate route:
     * &#x60;/dev/characters/{character_id}/contacts/&#x60; SSO Scope:
     * esi-characters.write_contacts.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Not testing write operations")
    public void postCharactersCharacterIdContactsTest() throws ApiException {
    }

    /**
     * Edit contacts
     *
     * Bulk edit contacts with same settings --- Alternate route:
     * &#x60;/v1/characters/{character_id}/contacts/&#x60; Alternate route:
     * &#x60;/legacy/characters/{character_id}/contacts/&#x60; Alternate route:
     * &#x60;/dev/characters/{character_id}/contacts/&#x60; SSO Scope:
     * esi-characters.write_contacts.v1
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    @Ignore("Not testing change operations")
    public void putCharactersCharacterIdContactsTest() throws ApiException {
    }

}
