/*
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.troja.eve.esi.api;

import static org.hamcrest.Matchers.greaterThan;
import static org.junit.Assert.assertThat;

import java.util.List;

import org.junit.Test;

import net.troja.eve.esi.ApiException;
import net.troja.eve.esi.model.IndustryFacilitiesResponse;
import net.troja.eve.esi.model.IndustrySystemsResponse;

/**
 * API tests for IndustryApi
 */
public class IndustryApiTest extends GeneralApiTest {

    private final IndustryApi api = new IndustryApi();

    /**
     * List industry facilities
     *
     * Return a list of industry facilities --- Alternate route:
     * &#x60;/v1/industry/facilities/&#x60; Alternate route:
     * &#x60;/legacy/industry/facilities/&#x60; Alternate route:
     * &#x60;/dev/industry/facilities/&#x60; --- This route is cached for up to
     * 3600 seconds
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void getIndustryFacilitiesTest() throws ApiException {
        final List<IndustryFacilitiesResponse> response = api.getIndustryFacilities(DATASOURCE);

        assertThat(response.size(), greaterThan(0));
        final IndustryFacilitiesResponse facility = response.get(0);
        assertThat(facility.getFacilityId(), greaterThan(0l));
    }

    /**
     * List solar system cost indices
     *
     * Return cost indices for solar systems --- Alternate route:
     * &#x60;/v1/industry/systems/&#x60; Alternate route:
     * &#x60;/legacy/industry/systems/&#x60; Alternate route:
     * &#x60;/dev/industry/systems/&#x60; --- This route is cached for up to
     * 3600 seconds
     *
     * @throws ApiException
     *             if the Api call fails
     */
    @Test
    public void getIndustrySystemsTest() throws ApiException {
        final List<IndustrySystemsResponse> response = api.getIndustrySystems(DATASOURCE);

        assertThat(response.size(), greaterThan(0));
        final IndustrySystemsResponse system = response.get(0);
        assertThat(system.getSolarSystemId(), greaterThan(0));
    }

}
